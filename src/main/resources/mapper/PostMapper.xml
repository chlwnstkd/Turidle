<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kopo.poly.persistance.mapper.IPostMapper">

    <resultMap id="postResult" type="java.util.HashMap">
        <id column="POST_NUMBER" property="postNumber"/>
        <result column="POST_NUMBER" property="postNumber"/>
        <result column="TITLE" property="title"/>
        <result column="CONTENTS" property="contents"/>
        <result column="READ_COUNT" property="readCount"/>
        <result column="REG_ID" property="regId"/>
        <result column="REG_DT" property="regDt"/>
    </resultMap>
    
    <!-- 게시판 목록 조회 쿼리 -->
    <select id="getPostList" resultMap="postResult">
        SELECT POST_NUMBER, TITLE, READ_COUNT, REG_ID,
        DATE_FORMAT(REG_DT, '%Y/%m/%d') AS REG_DT
        FROM POST
        ORDER BY POST_NUMBER DESC;
    </select>

    <!-- 게시글 등록 쿼리 -->
    <insert id="insertPostInfo" parameterType="PostDTO">
        INSERT INTO POST
        ( POST_NUMBER, TITLE, READ_COUNT, REG_ID, CONTENTS, REG_DT)
        VALUES (
               (SELECT IFNULL(MAX(A.POST_NUMBER),0)+1 FROM POST A),
               #{title}, 0, #{regId}, #{contents},NOW()
            )
    </insert>

    <!-- 게시글 정보 조회 쿼리 -->
    <select id="getPostInfo" resultMap="postResult">
        SELECT POST_NUMBER, TITLE, READ_COUNT, REG_ID, CONTENTS,
               DATE_FORMAT(REG_DT, '%Y/%m/%d') AS REG_DT
        FROM POST
        WHERE POST_NUMBER = #{postNumber}
    </select>

    <!-- 게시글 조회수 증가 쿼리 -->
    <update id="updatePostReadCnt" parameterType="PostDTO">
        UPDATE POST SET
            READ_COUNT = READ_COUNT + 1
        WHERE
            POST_NUMBER = #{postNumber}
    </update>

    <!-- 게시글 수정 쿼리 -->
    <update id="updatePostInfo" parameterType="PostDTO">
        UPDATE POST SET
                          TITLE = #{title},
                          CONTENTS = #{contents},
                          REG_DT = NOW()
        WHERE
            POST_NUMBER = #{postNumber}
    </update>

    <!-- 게시글 정보 삭제 쿼리 -->
    <delete id="deletePostInfo" parameterType="PostDTO">
        DELETE FROM POST
        WHERE
            POST_NUMBER = #{postNumber}
    </delete>

    <!-- 좋아요 정보 삽입 쿼리 -->
    <insert id="insertLike" parameterType="LikeDTO">
        INSERT INTO LIKE
        VALUES (#{userId}, #{postNumber})
    </insert>

    <!-- 좋아요 정보 삭제 쿼리 -->
    <delete id="deleteLike" parameterType="LikeDTO">
        IN FROM LIKE
        WHERE POST_NUMBER = #{postNumber}
        AND   USER_ID = #{userId}
    </delete>
</mapper>